#I think this is a template for a single unique post in a different subreddit
#just add it to the end of buttsbot_cron.py

print 'checking single post'
link="https://www.reddit.com/r/baseball/comments/555nz6/the_houston_astros_have_been_eliminated_from/"
submission=r.get_submission(link)
submission.replace_more_comments(limit=None, threshold=0)  # get all comments instead of just first few
all_comments = submission.comments  # make array of comments
flaternized_comments = praw.helpers.flatten_tree(all_comments)  # ignore tree structure of comments
# Iterate through comments in the submission
for comment in flaternized_comments:
    # Ignore comments that have already been checked to avoid multiple replies to the same comment
    perma=str(comment.permalink)
    #c.execute('''INSERT INTO permalinks(link, timestamp) VALUES '{}'''.format(perma+", "+str(datetime.fromtimestamp(submission.created_utc))))
    if (str(c.execute("SELECT link FROM permalinks WHERE link='{}'".format(perma)).fetchone())=="None"):
        print "NONE OMG THIS WORKS"
        l_comment = str(comment).lower()  # make the comment lowercase
        #talks_about_butts = any(string in l_comment for string in keywords)
        talks_about_butts=False # #boolean for talking about butts
        for keyword in keywords:
            regex_string=r"\b"+keyword+r"i*e*s*\b"
            search_result=re.search(regex_string, str(comment), re.IGNORECASE)
            #print search_result
            if(search_result):
                talks_about_butts=True
                print 'keyword '+keyword+" worked. Comment author was "+str(comment.author)
                print "permalink: "+perma
                #print "TRUE: "+ keyword+"\ncomment: "+perma+"\nauthor:"+str(comment.author)
        # If the comment talks about butts and isn't a comment by this bot, respond with the correct string
        #TODO: check for unsubscribed users
        if talks_about_butts and str(comment.author)!="buttsbot" and str(comment.author) not in unsubbed_list:
            print("Comment author: "+str(comment.author))
            butt_number=random.randint(0,len(butt_links)-1)
            full_reply="You have activated the Astros buttsbot! Here is a picture of [{}) Thanks for enjoying Astros buttocks! Go \'Stros!\n\nAny problems with this bot? Suggestions for more butts? Please send me a message or visit /r/ButtsBot!".format(butt_links[butt_number])
            comment.reply(full_reply) #reply to the comment
            comment.upvote() #upvote the comment
            print("Replied to a comment: " +str(comment.permalink))
        c.execute('''INSERT INTO permalinks(link, timestamp) VALUES (?,?)''',(perma, datetime.fromtimestamp((submission.created_utc))))
        #c.execute('''INSERT INTO permalinks(timestamp) VALUES (?)''',(datetime.fromtimestamp(submission.created_utc),))
        conn.commit()
print "-----------------------------------------------------------------"